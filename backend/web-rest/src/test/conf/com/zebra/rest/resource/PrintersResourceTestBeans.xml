<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

    <!--import resource="classpath:spring/applicationContext-rest.xml" /-->
    
    <!-- Component scan to find all Spring components -->
    <context:annotation-config/>
    <context:component-scan base-package="com.zebra.rest" />

    <bean id="restletComponent" class="org.restlet.ext.spring.SpringComponent">
        <!-- the defaultTarget for this component is our Restlet Application -->
        <property name="defaultTarget" ref="restletApplication" />
    </bean>

    <bean id="restletApplication" class="org.restlet.ext.wadl.WadlApplication"
        scope="singleton">
        <!-- all requests to this Application will be sent to myPath2BeanRouter -->
        <property name="name" value="Zebra API" />
        <!--property name="inboundRoot" ref="authenticator" / -->
        <property name="inboundRoot" ref="springRouter" />
        <property name="encoderService.enabled" value="true" />
    </bean>

    <bean id="authenticator" class="org.restlet.security.ChallengeAuthenticator">
        <constructor-arg>
            <null />
        </constructor-arg>
        <constructor-arg value="false" />
        <!-- Sets the Challenge scheme parameter to the static class member -->
        <constructor-arg value="#{ T(org.restlet.data.ChallengeScheme).HTTP_BASIC }" />
        <constructor-arg value="zebraRealm" />
        <constructor-arg ref="verifier" />
        <property name="next" ref="springRouter" />
    </bean>

    <bean name="verifier" class="org.restlet.security.MapVerifier">
        <constructor-arg>
            <bean name="credentials" class="java.util.concurrent.ConcurrentHashMap">
                <constructor-arg>
                    <map key-type="java.lang.String" value-type="char[]">
                        <entry key="${rest.username}" value="${rest.password}" />
                    </map>
                </constructor-arg>
            </bean>
        </constructor-arg>
    </bean>

    <!-- Singleton instance of this class -->
    <bean name="springRouter" class="org.restlet.ext.spring.SpringBeanRouter" />

    <!-- MOCK CONTROLLER (FOR EXECUTION VERIFICATION) -->
    <bean id="mocksControl" class="org.easymock.EasyMock"
        factory-method="createControl">
    </bean>

    <!-- MOCKS -->

</beans>